<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADIIAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAACCCSURBVHja7V0HlBzVle1JXV3dMyONIshCICQRTBQgQORgMqwOacE2GUxYECuCTTDZ
        BBNsDCYYr2WiABuW7PXBhBUgkcOSTFAgCBAIEEIgAZZE7fu/Xv2q7hnN/Ipd1XXvOfeMEOo0/e/777//
        QqEAAFlCySoUikTTsv9c4j8bVpE4iP77h8TdiROJlxKnEB8mvkR8l/gZcRFxGdFifkdcSJxLfJP4FPFe
        4h+JZxIPIm5OXIleq7NQ8Ly2wyOI4u8BAIgYhmXTK3jTMokrE3emvzuZeD1xOvF94hfEbz0CD0NhKL4m
        ziO+QXyADcsh9Nob0M+B9N6aqwxSO7EMYwAAwSF2+TaPqDrlzwHEzVjwdxJn8M5t1YH/YqMgvIUrifsT
        R5MhMJSxMtkraIcxAAANsNAdAZXlz07ilsRziU8QP6+T4Pui8Dhm8ZHjUOIoev9t6rO0OAYBAIDuLn7B
        s2u2WS3059WJxxP/zud2K0MU3sFM4nXE7Ymm/IxFNm4AALCbX6g62xv0cwt2qWfWBOqyyvnEm4jrV3k3
        AABXn8VgWGXiTvTnm/lcbTUgRQBxL/qcTcrgAUDu4L06E1d3tot8K++UVoPzI+I+Mrhp4qYAyNs534nq
        F2kXNOQV2rXET3MgfC/fJo6Tv48uGAAgD+6+WXV/vyL9+XTiOwkH5b5iL2Me78QfEOcwPyR+zMHGBcRv
        iN/H+H7uIHbgKAA0NoTgK0r8bfRzV+JjxKUxCv0zT8LO1cTTiIcR9+DrxPWIqxFHEIczV+UMwnHEHxH3
        Ix5HvIjjEtPZUHwV0ftcyO8HBgBoYJffzeAbRrw4huu8pbxzC6NyOd+/b0IUXkY7HTWqM/T8siLfv8EJ
        SKPZgP2CeBsbmTAGYTKxDQYAaDyXv2x57/a3Jj4aoUu9hHP6byceQxxL7KLXauomYPEeWvn+3e9nGOK5
        t/c+p/3ZSuw57Ea8kD2EBT4/xz+JP4ABABoHZct75jdZoO9HJHzhPdxPPJq4BouwWuwjYy7IKbJBKdXU
        JYh6AFPeZlzGnoHO5xEZjeNhAIDGOe+XlSiGcjLPopCi/57z/S+XCUImufVmt6Kg+nk6tYbA/jtxu/Gq
        xmcTBUYTYACAxjjvO7uwaa1Jf74npMsvHvsa8Qy527fRWd4t+01h4Mzz3kRSkx2A7OszLpY5ATAAQObF
        79bnb8rVcWF2/RmyBt+0Rqld1uCAXFrr7Z3fgV2xOEEzm1HcBOwEAwBkF47720/+3JH4egjhf8rHhrXl
        8zlHirRX0Dni75C/g124hkE3K3AtGAAg2+K3d+ndfSz8nqL6D8rd0OBrsazcjzvi7+db/BZfXfaHAQCy
        e+a3g3AT+FouiPg/lIk6hjVYBffKGWmtFU78loxvdKA8GMganGCX7fLuGiKldypxu0I7399nqVY+vPhn
        E9dR8Q0AyIz43Wj3tlzY4lf4Ivp9jWywWXWFVsiW+O2A384BxL9MBjkNvtkAgEygUpXXP5a77PoV/yey
        y4+4KjNZSKUMij/4zm9xMtMQ1AEA2UKbEv8qnNobpAx2T2KzyrMvZHbnDyr+p1TkH+IHMgM3Mt+fq+P8
        LvyXZE1Ae4Yi/L27/TMC/A6eJW7IyVIwAECGFr9bznsuX9v5WfhP0mM3VAEvI/PinxlY/HVPXwYAvzt/
        UZ399w3Qtmsacd3MLvyoxQ/XH8io678u5+b7WfjPyE64ZgYj/RA/ANdfLdpOboDhZ+G/xo05su32d0D8
        QB7h3PUPkwt3os85e+/JtF4zoz3wown4PQPxA9mFO5NvrM/db4GcpDugIXb+nUJF+yF+ILPnfjtgV6E/
        3+KzIec5ss9dY0T7sfMDOTUANv/dZ9PLO2Rvvrzf80P8QObFb8ouvtN8LP5XVIZbR6bFHzTDL/6d39sf
        oacOxuLvh2MUORBWDPad/4k+evd/SfyxfFzWpt+mfudng2p4ei+YVif990qymtCUMw5GyaakZaulWwdj
        APC1w9gLZ5RmU0uH18je+UbmxZ+uqz63x6L42Uo/x3GM5R9cgv0Jtx4TE46eJl7Fbco7YQSAYAbgRrlo
        zvDR0FMYitXlQmvPXWFPfG6/WeXqiylGv+PmKTp9Bu8lbkVswihywO/Zf5SPvn4iN+BI1RC0kLFmHmm9
        6nPEb88f2IH4QoD3J8aYHUGfsy2TWZhAHQyAvVv8nBtW6Cyyv6mov5kx8af1qs+smi+wZ4hWa4JfEI8i
        z6wZBUhA76KwF7KYp/ecj4Sf3eSiasPOH4P494pootJH0otQbdUBoBZt6rx5EPE7zYUlagPKmelpl62d
        PyrxO3yIPv9ABAWBHqDO/hUOHuksqPk8A6CQqe69+dr5a2M1B8IAAN1RVgt6vOY0G8G/Zmb3797DL+07
        /5yIxe/wXvpdVNCBGOi+AO3F9yvNhfS1DE4ZLKrs7Pzpu+ePf+f3ci4PLYUXANS4/yVrMCeS6PbyH+AO
        8MCZv47i/4A/l86tzffyhsfAbQDgXYQlNdPvS81+9ifIoGElU+KfmWLx7x3Q7RdjxTaWk5P1azYeIvaD
        BwC4C7FZLsILNBeQSD9dM9W7f7bEv1cI8a/lyd04STNzU8R4NkJiEGDDXtwikedxzYV3Ey24Ymp3EKeB
        6cCUp/eGc/td8bse3Pp836/jwf1H6o9vQAIoqsUzjsdy97V4vpNXSWLRtVhpNmiC2zS8+L005I3MPdpG
        3EyxEQcSQqtaQMdolv3OIo5Wu2x6DcAg4iO5EL+Am8Q1SfMY8E8yGMNhAPIO+6wsCkUmay7A2+kxpVTf
        I9vC2M1nF6Psir/akxN5HJ9p9m7YHteBOP87u+VzmldIk9Qwz3R/pkk+xfUWR9OzJ/7u3+XTmt/lRBgA
        GACn4+88rdRf09oi9Zl/9mc61kc1o+DHsvfhqhEbgKTE77xWuxy4epV2AxfTaoEByCvc9N8fE7/R7Pe3
        QuoXjP2ZtiR+HiChZt9CV0RGIEnxC4z0Hc+ZykNeoYVcwundV7LO8lH5V0r9gjFURPzGgFl1+/IVYnAj
        kLT4BTrUv9uaewD09fzvyhHvyAXIsftvWoaPnv9nSXGl/u5YCWFMwJuAD+VxoBLQCEQj/qm+xO/9Tu1G
        oTopz59z0BBayPH5X+T/P6+xWL7ho0L6s8ecBBf7vYqMxUcDG4F2nwKMcuc3PEk+/ryffpqGbzFPei5k
        po0bELkBWJcDYH0tlk/VFVkWYEZmBPaTTTV1jEAcGX5+ja1tAIo+jj+TYADyCLNq6s9ijYXyMnFoptzF
        aIzAR1pGoB5n/uUbdT91HRdLL6cIA5A/A2D4CgD+hR5j1scA0GsOsArdhl3o7JBJGIG0iN8J7NqPP04z
        I/A6Iq4Cc+r+lziyr7NAz61LDXnRctOVi3KhDuKmpV2Fwfz37X28rziNQJrEXx0APUBzlPttqc/sBGIy
        AKYMAL6Y2gCgt5OPIWMVl3PGoohwP0E8k/5+hPIMjNiNQPfbgVSJv8q4/xt3bdJp6d4BDyCfHsB6PFZK
        p358bKKLpLqNl2hU8tpy3tuj/DkKfY4kizIw2F7Hqz6973YbzVyAx+hzdCEXAAHA3vgSPWZIYgbAf/fe
        6fSYpI2A8ASaeWhHsld9egZgvGYm5HR6/QEwAHlCWQXUzvRVAZiEAQjeujtpIzCH5/S9m/hVn44BMKxN
        NasCn5QGAEeA3J3/RQbgFO0AoJlAAVD4Bp5JGwErFWf+nj2ATTQNwFOquSuQq/P/IM0MwG9VADBOAxBN
        6+60G4GpsYvf/X51PQBROjwQBiB/BmBtzQzAeaqPfPrc/iwZgandevjF+/1ux3Mb+35fhtUf14D5CwDu
        k4oMwOjFn0Yj4Iq/nMBVqr9rwAfod9MODyBPAUC7BPhszcV7BzGeDMBohnak3QhMpedLTvxuItBPNBOB
        kgvwAqlx/02e66ezgM9TiTbxin9mTK53PY1Asju/wHBlACZqpgL/F/1OWmEA8mUAVuwlsaY2A3D/yPvH
        Jyf+ehqBV+nx6yYqfud3ax/zLtJ8nxepa2Gg0aF2h800k0REkHCdSMtFo3H7l2TACMzl2oF4I/49G3hR
        DnyDZmPQ4+VjNoIByJMB+JmmiKK9Iopm53+KR2DNyoAR0CsljtoA2A1BHkZDEKAasuZbLsYrNBfw5EKb
        1RaJexjNzm+P6LaLg3bnGYUwAt09gBGaBnI+cXOc//N1/tdtFyV4ohocGoX4+4Xa+Z9VHYnEcw3OlBEI
        12NQFxXLbyGQ+N2tAgOQL/d/Dc1JtF9yFZ5djx/W86ioqr7ws/qEYNvYCJSsPTJkBOL1BNxOxkdptgV/
        BGPC84KOqgpAnRkAs2XL6Ch649uvO4r4QmSz+opVCUR74DhQcN5bixz4ofd+rqbP1IxKwDzArV3XvR56
        gBg+Q8ytPDxR815af1afyk9QmW9BKvOmcbORZI1AewzHAbfG41lfNwDwAHJz/u8k/kM7ASiKCkC3S+3N
        PoXynKpB0G3GaeT4OOAej3SHgy7gegEYgIaHGxxaixdfX4tjETe6CL84bKGYsqmoP5HcRYt5oNuHsA9R
        uk1Og3oC2T4OFFUC0AmaMxFfJQ6D+POAocoAHEz8TmtklGGNjmxnspt6Xhgg2WcyLepBcmEP6MMIOMJt
        j8ATMC133HZWbgdsIyiObPdrvvaN9P6LOP/nxf33FxwSi6gSiQHorxb35rzr+RGI2Mn+RGIcqATez+r9
        uFEK7Qk8wTcl9k1DX6JLgxFwh7yO5QxEnd/rsZmY8gSEhRLFCrK3n96iPCO6FuD8PBVpgE7i44UfgSyV
        RsAgT6DouOZW32fhcIHBG7UrINMQE6iwsSpZJ2sGWkUj2I1gAPIS/S+pBJyFmvf/O0S6ONz3IMpOTw9g
        BJbJ44CICZganoDpmRcQ7IpQCGScr3mA9YoJuEHSAdxuTOe1/k7vE63Ac2MAmn2NinqVBDYsljtqWyDC
        CPwydk+g+opwgmb3I28btAN8/Q7qdRxw/63wdr7SvP47SSVnATlw/+2Cnmmai/C62OrDTdUFN35PoHpi
        z96a8w+8BuCngcaCJ3ocUMc73eo/p8JzA7j/+XL/t9PMDXcXfocV33syY/YEuot/js/X+DjwJOQkjwNd
        lrcB6FzN576bfm8V1P/nAeJLbpKL6Neai2MWp+zGuzvE6QlEM6tvMr+34J8vdiNgOUVWbfT/rvXh2Ryo
        rjmBBkZR7Q4raLb/FryVFpWRSHAoSk/A8QLC7/yC/0scI38HLSHv5eOMCXSpxJ9NfFyvvkiPGRZ7i3cg
        BWhSi2ZvTXH9i3hoomfD8J6AMAJ/lslCqm1ZBIM6DQ6QmREUQsUREzDV2d+QPf30n+tsZSiBBoe9WMQC
        uUVzccxIxP2P5zhgG4HWiKb0mhFfgUZ9HOhQyU67clMPnecQV6HrIviXr+DfWM3cf/vcW6bzZD0WR1Qx
        AduDeS9147riqSIc6KOwS/BSMhrNuPvPiwEYJBfJuZqLYzEPCuk7/TXdx4FFqRN/HDGBVinkSZp1HRZn
        Q64XeXdnINW7/0jN1t9Ou60V6l4aGt4IpFP80RqBObJU219TVM/uDwPQ+AagqBpwLNPO/a+kJDKcnBFI
        VvzRGoGlPv7tW8QfYvfPT+BPLKzh3FBDZ4F8QFw/VY0hwl8RpmNKb7xGQLek+sTCEI3UaaBBDIC9sE7y
        sUtcL1NJ03YvHJ8n4F71mXU0eskYATGXcCju/fO0+9tJLK9rLpAvVOXfiilcINEbgXiu+tJpBBbIrk7I
        +ssBnMq3sqy5v8jHIvlvWiCVVIghfiPwWF3d/uSNwJWcB4Kefw0PN+13Wx9FIV+pvn9pDw6FjwmkU/zx
        GYFn6HlGqucFGhhuWqhIDPkfH4vkPu4SnI3MsOCeQLrFH70R+Fz2BlCuPwxA45/7O2SK6C84n1/37L9L
        5txD/0YgG+KPzgh8L+/8i1ar2xAFaFy331CLZQcfKb/VPe+ytkiqjcCp3MKsp8/4cKbEH40REBvAYfKx
        zRB/A4O+3D8p1391nqDjJ510M/nYpowuErOqE85+nBMvPtc8zn78Nf2blasq57L2+dxOv2tyibLu9/ub
        goWzf2OLv0Mt7KFygIa/oplzVFpolqvCnOEddgZjJ3E1+kzr0M8ViS0eTyG7Rs71BNb20dPhJmIR7n+j
        ir+idr8urgVf5sMAPK6mwTTCAimqdtjdWcl4AMzggSq2oR8mO/nqfcdT6DEGSn4bVfz2ghAjnX/PqZ66
        4p8vW2Sbdaz4A/TgZO7Z3/UqMl9D39BfXhiNmv9GF/+VPiL+TnT4Ej4zIy00C0cb25NZ22fNv0j/PhqF
        PxB/LR8krohuMCn/np0Gp0NVUtdzAUqF14YBgPi9fJO4sXyOFiSGpHbXb1a7vvDSDgk40uzaVBZ2AXUT
        /6ey00+rZ3cB0nneL6lbnUt6yW3ojW/Lrj/ie+7C9wzx27n+EwtFWSAE1z9tMD03Oi0yk3NLPqotCyD+
        +WqgC7r+QPzc4+8MeR2EarD0fb+dVbv+YOIpAWcYOGW/E2nNtGYy6QmIXPzfEM+nBWZC/Cn7bk1PnkJR
        GuedOcq/JEThzzH0vK2ZTnoCIhX/BST+CopBUvS9li1vu7Zm+m42kENYbQEHLfn9QI75KnPWI75riJ/F
        X1Z3yUD9UORbF0NlbrbIVGV7TuN7Iev93yDuXuifsUInAOLP1W5vC79E3Jj+/FuezhNFQ9NNqo4TAMQP
        8dfxO+yqCuqJ3b+J5yzsKXPz7XHjYYUvJvveIDv9lCB+iB/ir9/3tlfNkE67/r6JI/rbs5v/fISdjEWb
        t5OrOjhB/BA/xJ/A91So2d1Lltt+3SRBmrIMeT9ZhGNPWFoQcWvvacQdZfCwxBWCFXzXED/EHy1Ej4UV
        rNrMPDexpmS1E0cQtyEeJRtv2Fd47/P3EXVPf3FDcJl8TZz3If7YxF9azg7X2sD95MvcVKWnPgImufKG
        dLVHcEHOMRzA+xuPUF/gczRXkLFfItC3G7FNDWyFkYf4YxG/S5MDV8PoeTvUDPr2rKeWeuogSt0i9M3S
        jbfFLlJxjyT+jlNyZyUg9lrOkM1dTc+g1jJSeyH+OMTvNhRtk22kS9ZfeZDkLO4+c4QMOpkZO3MW2Xup
        Fby944sEqeHsxh9LvIr4EHE259MvSVDsXn7EhmcdmSbs9coAiD8W8Rt8R23noc9fzrXTNfRv+qU6zlBa
        zg5flIZtECff7C9/fyXrXq6aWxCw6CZqiuvBycTxZLRacb0H8ScpfoPban/dR5vpiYV+KTMApR4FL3rh
        DyFuxrv7ZG6o8XFMQbqg/J4TgkRLt01lwZbzncDdh/gT3PlP5ZLhvt7DdOKA+u5K9Nr9akRfVr/XdYmH
        c4PUlzh6vixFgne4iNu3ny7nFbR5y7RxtQfxp2vnr01CWaMuBsD0JL2Yqm5eJNtsTTybh3/MrePZXWdQ
        x0w5gr1k7UUcolKFDTZq2PEh/pTu/PUxAGZNhp19Bz+Ix5hfxm79FykVvMWG9S3uzy9ae41WffoR3IP4
        M7TzJ3gEqBG9veOLxJstiL8iPh2wTVYS5/mFfIsg8gTOk1V6dvJOserIgrt8iD9jO7/jwh4XXxCQ8wzc
        3bGJ7+TFfLv7iZ+lTOxfcrPOR+QNScmaxE09RtJ7b++WXNSO7rwQfzp2/tMC7PwikPbHeK4Ba9pi2bXy
        a/Fu/2qA310c/IrTfB+Xv4eSdTwfQ0bK77jMQbzqmwjs8hC/dUXKxH9KQPH/WZ69o04Eqr2rd2vlZ9dJ
        6Ms4L+AdTsEVYj+BuCtxDH3+LnqPrT0cUXBnD6R+5z8lgNvviH+wG7CKYJF7h13a9fLrE6/mIGOSgl/M
        mXfTuC3XcVzCK0Zw9Se29ij0Rq6NACD+HsXvuOpR7fj2IM8xHCybndDuLrIcXyHeRjyLuDeP3O7qJvYS
        xA5A/NGJ32AhlVQ57eEsxjhFL9z5/+O794n0HW3BxTWl3FU9AhB/XcTfwQ0x3Xv8DXkHXhxTso1osnk3
        Bzu3l1WNbVZbt3N7Ga2zAYg/XvE7QjPUXf6xMbj73/LMw+s52UYkKpX5iOFG5FswCh2A+JMVvzPX3pRB
        tckRFuIs5Tv4KfTcB8ignckNM3DvDkD8KRC/W6QznvhYRMJfyIk3E+VOX/aMO0OGHVAH8V8B8S9X/E3c
        XOTNiDrh3iDv4w2rS2UMmtjpAez86RG/G2hr5gm1H4YU/ntsZDeW+fSI1gMQf4rFbyf4iN56In9/Xsgd
        X/yOx3arlcduD0D8qRf/pyHKZ6fIyj+DE3MMJ/0Ywgdw5k+v+Nul2x9G/C8TD5bNOh1XH8IHsPNnRPzB
        d36x6/9BpgW3ec74SNIBIP6GF/870mswLFM9H4QPQPy5cPuflf38unDOB3Dmz6r4Dw0o/ge56UcB8wwB
        7PxZE3+4aP99xFUx+ALAzp+/nf9+WRdgeBqCAADEnxPxl1j8nUjoASB+iB8AIH6IHwAgfogfACB+iB8A
        IH6IHwAgfogfACB+iB8AIH6IHwAgfogfACB+iB8AIH6IHwAgfogfACB+iB+A+CF+iB+A+CF+iB+A+CF+
        iB+A+CF+iB+A+CF+iB+A+CF+iB+A+CF+iB+A+CF+iB+A+CF+iB+A+CF+iB+A+CF+AID4IX4AgPghfgCA
        +CF+AID4IX4AgPghfgCA+CF+AID4IX4AgPghfgCA+CF+AID4IX4AgPghfgCA+CF+AOKH+CF+AOKH+CF+
        AOKH+CF+AOKH+CF+AOKH+CF+AOKH+CF+AOKH+CF+AOKH+CF+AOKH+CF+AOKH+CF+AOKH+CF+AOKH+AEA
        4of4ASBx8ZchfogfyCdKlsNOiL8X8ZdJ/KZ1WEDx3wfxA2kWv0m8qO7id95Po+38JsQPpA1lJf42Ftvi
        lOz8JXreUwOKfzJxUIrEj50fSKn4RdCvRRqAnxIX1FX8AkUp2iZ63qOJXwcSf5HE73gRUYk/jNuPnR9I
        JYazSExrLP18o+7id93/0QHej7vzi+cYyLt/WPFX5M4f/szfAfEDaYKpXP8u4t2pEL9rAA4gfhd4549K
        /FEF/CB+IF3gBd4mxXa0T7HFJ37XAJyUkp0fAT+gAeFG/ccQX/GxsL+NVfzuexO77pK67fwVqwVXfUDj
        wpC7vwi0ne9jYQtBXk6PrcQmftcArEV8py47f7s6838WMOC3sgo+QvxAynf/N30s7inEAerx8b6/FuLp
        veQjxLXzR5PhhzM/kOrd3w4A/pyFpLO4nyeuJh9bDCk2fQPVQTyb+GHNe/mEeCm9l4Fw+wHAb/DPFpcQ
        z3TNxb2QuI8SZiWBxV3iI0ar1Up/Hkc8kXgJG63NiEX5bzrg9gOAPirKAOzgI+nnJk4Rjtf178lTKVpe
        j6CaZVz1AYB/UdlZdhdrLnAhiq2k4JrrtLgdb6DE15bFCN4HCnuAXMLePfsTp2ou8r+QQEx3x20ARCl+
        uP1ABg2AuGL7SGORi+SgA0Pn06dR/FFU9UH8QKbgnqf342y+vhb6DOKqgXd/0/KmG1fTcIKJVvLih9sP
        5BKtSpCnaS72O2mBm/IxwTwNERgT8YY1iUfyld4JMoov6vxNx7OwkhM/6vmB3MKOqgsBXKO54M+Rj/G7
        0Kvr+Y8jziQu9TzvPJlRaFpD5HPHfbzAzg8AaleuEO/RPP8fzKXC/g2AnW/ws16aeXxP/L26XozLC0CS
        DwBUGQDR7PMRjUX/JXHHQPf+9uuspFFk9AXxR7HdMCDJBwC6CVPk8j+psfA/J44PYQAmEBdpvM55sSQY
        Rd3GC0k+QIMYgEGc16+TALRhCANwmGZj0atlAY5pxSV+tPECgBoPYHoCHsDumv38zlbFSdj5ASCRGMDD
        CcQAfkB8UcPIbBso0NiX+NHAEwB6FGaZeJeGEIT7fkig83lJtRo7qJeCI3Et+JtC0TIiaSwSlfix8wMN
        C7sLkHCNr9IUxHmB3HMn068oS3aFGF/39BwUwv+AeCH9mwGR7P5RnfkhfqCh4aYCn6IpinvYYwhmbNx8
        gFW5y6943aPo78cSWyMt6cWZHwA0RGnvuPtqTv+Zzf35CyFiAT3XAaidP9JmHjjzA4CGKNdkN1wnDnBo
        4o1AsPMDQKwGQNwEPKopkrti7wIcRvyI9gOAT/HcJo3ABZpCma/SdTe2Gkf82PmB3BoA2wvYlnPx9boC
        lax2dX6vt/gxqw8AgqJqHuBjmqIRGX0/kWIp1ikegAaeABBhHMCOxE+qqdPvjS+T8NaSj+2qUycfRPsB
        ICIDYHMk8TUfIrqTOESKsV/CnXwqEYgfJb0A4BFWlzQCZ3JzDt0pvH+Qtwj2jlyItIpveYaqLJt5HA63
        HwCiNACuF/CiD0GJ3IBr6fGD5eOLMQQGhUiPUu9PpBMfG6KZB9x+AOgRoitvi6rd/8aHsIQncDtxdSmq
        kuU2HA0Lt59ggWf/nc+jydC3HwAi32ntgGAnC9qvyF6QMwNNrhcQbAriEbDxcFKEW+R5fzyLeEmA93Uv
        3H4A0EG75R0W8koAsYnd+Wbi5sSSMgSmN99/Od5H/5q5Aa2yhfgavOvPCfBe0MATAHy73EXLGRq6d8Cz
        ttPq+1b2CIaT8IrLLQbyskPe64s2ZdsTLyO+7SMoCbcfACIxAvZu3UI//1OzldfyuJivFm/gkd4TeLz3
        asSV6TVEdeH6xJ2JR3Nvgqd8TCpevtuP7r0AEBCOu25ahhwIUrK+DSlIbxah8CrmcgXiR+wtLPSRhKS/
        8+PMDwAhjIA7POTsXoZ6pIXLZJ2CYY3AmR8AojQChvQEJnHjzjSKX+QjXCczE7HzA0AsnkArTxJ+LWXi
        FxmBvyR2ymPL8BT1KgCAhjEChrodWIfrAL5NgfifJe4h04NLdRgxDgC5geEp/zWs/rKhZ7BcgSgogocX
        ywajpuUWCQEAECOKqrOvc104hrsJhbmv9+vu30Lcgt5Li6o/KEH8AFCPuIBI1W3ie/3Tec7gVzEE+N6W
        OQKmtZUaIe7kK8DlB4B6oCZn3/YMhhJ3JV7B5/N5niEgulzKvQfFAJGb5EQig1z9VlkGbL9WMwJ9AJAe
        mDV5/LZ7PlS66iXrBL6ie5D4BvFj9hKW8Mhw4dbP4pZkNxLPIO5CHMGJSAXl6ndixweAKPD/+6rATwG2
        Ld4AAAAASUVORK5CYII=
</value>
  </data>
</root>